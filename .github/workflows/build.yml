name: Build and Push Docker Image

on:
  # schedule:
  #   - cron: "0 0 * * *" # 毎日0時に実行
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        variant: [latex, extra]
        os: [ubuntu, alpine]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Check for new Pandoc releases
        id: check_releases
        uses: actions/github-script@v3
        with:
          script: |
            const releases = await github.repos.listReleases({
              owner: 'jgm',
              repo: 'pandoc'
            });
            console.log("releases tags: ", releases.data.map(release => release.tag_name));
            return releases.data.map(release => release.tag_name);

      - name: Find latest release with Docker image
        id: find_latest_release
        run: |
          tags=${{ steps.check_releases.outputs.result }}
          tags=$(echo $tags | tr -d '[]"')
          IFS=',' read -r -a tag_array <<< "$tags"
          for tag in "${tag_array[@]}"; do
            if curl --silent -f -lSL https://hub.docker.com/v2/repositories/pandoc/${{ matrix.variant }}/tags/$tag | jq -e '.name' > /dev/null; then
              echo "Latest release with Docker image: $tag"
              echo "::set-output name=latest_release::$tag"
              exit 0
            fi
          done
          echo "No releases have Docker images"
          exit 1

      - name: Parse version from latest release
        id: parse_version
        run: |
          IFS='.' read -r major minor patch revision <<< "${{ steps.find_latest_release.outputs.latest_release }}"
          major=${major:-0}
          minor=${minor:-0}
          patch=${patch:-0}
          revision=${revision:-0}
          echo "::set-output name=major::$major"
          echo "::set-output name=minor::$minor"
          echo "::set-output name=patch::$patch"
          echo "::set-output name=revision::$revision"
          echo "Parsed version: $major.$minor.$patch.$revision"

      - name: Set image name
        id: set_image_name
        run: echo "IMAGE_NAME=$(echo '${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.variant }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Check if image exists
        id: check_image
        uses: docker/metadata-action@v3
        with:
          images: "${{ env.IMAGE_NAME }}:${{ steps.parse_version.outputs.major }}.${{ steps.parse_version.outputs.minor }}.${{ steps.parse_version.outputs.patch }}.${{ steps.parse_version.outputs.revision }}-${{ matrix.os }}"
          flavor: latest

      - name: Set up Docker Buildx
        if: steps.find_latest_release.outputs.latest_release && steps.check_image.outputs.tags == ''
        uses: docker/setup-buildx-action@v1

      - name: Log in to GitHub container registry
        if: steps.find_latest_release.outputs.latest_release && steps.check_image.outputs.tags == ''
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and push Docker image
        if: steps.find_latest_release.outputs.latest_release && steps.check_image.outputs.tags == ''
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          # platforms: linux/amd64,linux/arm64
          platforms: linux/amd64
          build-args: |
            VARIANTS_NAME=${{ matrix.variant }}
            BASE_IMAGE_TAG=${{ steps.parse_version.outputs.major }}.${{ steps.parse_version.outputs.minor }}.${{ steps.parse_version.outputs.patch }}.${{ steps.parse_version.outputs.revision }}-${{ matrix.os }}
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:latest-${{ matrix.os }}
            ${{ env.IMAGE_NAME }}:${{ steps.parse_version.outputs.major }}-${{ matrix.os }}
            ${{ env.IMAGE_NAME }}:${{ steps.parse_version.outputs.major }}.${{ steps.parse_version.outputs.minor }}-${{ matrix.os }}
            ${{ env.IMAGE_NAME }}:${{ steps.parse_version.outputs.major }}.${{ steps.parse_version.outputs.minor }}.${{ steps.parse_version.outputs.patch }}-${{ matrix.os }}
            ${{ env.IMAGE_NAME }}:${{ steps.parse_version.outputs.major }}.${{ steps.parse_version.outputs.minor }}.${{ steps.parse_version.outputs.patch }}.${{ steps.parse_version.outputs.revision }}-${{ matrix.os }}
